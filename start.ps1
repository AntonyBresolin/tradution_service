Write-Host "üöÄ Iniciando sistema de tradu√ß√£o..." -ForegroundColor Green

# Verificar se o Docker est√° rodando
try {
    docker info | Out-Null
    Write-Host "‚úÖ Docker est√° rodando" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker n√£o est√° rodando. Por favor, inicie o Docker Desktop." -ForegroundColor Red
    exit 1
}

# Criar network se n√£o existir
Write-Host "üîó Criando network..." -ForegroundColor Yellow
docker network create translation-network 2>$null

# Subir os servi√ßos
Write-Host "üì¶ Construindo e iniciando containers..." -ForegroundColor Yellow
docker-compose up --build -d

# Aguardar servi√ßos ficarem prontos
Write-Host "‚è≥ Aguardando servi√ßos ficarem prontos..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

# Verificar status dos servi√ßos
Write-Host "üîç Verificando status dos servi√ßos..." -ForegroundColor Yellow
docker-compose ps

Write-Host ""
Write-Host "‚úÖ Sistema de tradu√ß√£o iniciado com sucesso!" -ForegroundColor Green
Write-Host ""
Write-Host "üìä URLs dos servi√ßos:" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ API de Tradu√ß√£o: http://localhost:4040" -ForegroundColor White
Write-Host "  ‚Ä¢ Swagger Docs: http://localhost:4040/swagger" -ForegroundColor White
Write-Host "  ‚Ä¢ RabbitMQ Management: http://localhost:15672 (admin/admin)" -ForegroundColor White
Write-Host "  ‚Ä¢ MongoDB Express: http://localhost:8081 (admin/admin)" -ForegroundColor White
Write-Host ""
Write-Host "üìù Para visualizar logs:" -ForegroundColor Cyan
Write-Host "  docker-compose logs -f" -ForegroundColor White
Write-Host ""
Write-Host "üõë Para parar os servi√ßos:" -ForegroundColor Cyan
Write-Host "  docker-compose down" -ForegroundColor White
